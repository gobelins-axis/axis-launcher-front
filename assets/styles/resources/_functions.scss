@function strip-unit($number) {
    @return math.div($number, ($number * 0 + 1));
}

@function vh($value: 1) {
    @return calc(#{$value} * var(--vh));
}

@function vw($value: 1) {
    @return calc(#{$value} * var(--vw));
}

@function rem($value, $name: 'small') {
    @if map-has-key($base-viewport-widths, $name) {
        $viewport-size: map-get($base-viewport-widths, $name);
        @return #{math.div(strip-unit($value), (math.div(strip-unit($viewport-size), 100)))}rem;
    }

    @else {
        @warn 'Unfortunately, no value could retieved from `#{$name}`. Please make sure it is defined in the `$base-viewport-widths` map.';
    }
}


@function base-font-size($name: 'small') {
    @if map-has-key($base-font-sizes, $name) {
        @return map-get($base-font-sizes, $name);
    }

    @else {
        @warn 'Unfortunately, no value could retieved from `#{$name}`. Please make sure it is defined in the `$base-font-sizes` map.';
    }
}

@function max-width($name: 'small') {
    @if map-has-key($max-widths, $name) {
        @return map-get($max-widths, $name);
    }

    @else {
        @warn 'Unfortunately, no value could retieved from `#{$name}`. Please make sure it is defined in the `$max-widths` map.';
    }
}
